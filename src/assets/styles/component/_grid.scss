// Grid Columns

.row {
	display: flex;
	flex-wrap: wrap;
	box-sizing: border-box;
	flex: 0 1 auto;
	margin-right: calc($grid-gutter / -2);
	margin-left: calc($grid-gutter / -2);
	> * {
		flex-shrink: 0;
		position: relative;
		width: 100%;
		max-width: 100%;
		padding-right: calc($grid-gutter / 2);
		padding-left: calc($grid-gutter / 2);
	}
}

.no-gutters {
	margin-right: 0;
	margin-left: 0;
	> * {
		padding-right: 0;
		padding-left: 0;
	}
}

[class^="col"] {
	display: block;
	flex: 1 0 0%;
}

@mixin grid-columns($bp: null) {
	$infix: if($bp == null, "", "-#{$bp}");

	@for $i from 1 through $grid-count {
		.col#{$infix}-#{$i} {
			flex: 0 0 auto;
			// flex-basis: calc(100 / ($grid-count / $i) * 1%);
			flex-basis: calc((100 / (#{$grid-count} / #{$i}) * 1%));
		}
		.offset#{$infix}-#{$i} {
			margin-left: calc(100 / ($grid-count / $i) * 1%);
		}
		.order#{$infix}-#{$i} {
			order: calc($grid-count * $i);
		}
	}
	.col#{$infix}-auto {
		flex: 1 0 0;
	}

	.offset#{$infix}-0 {
		margin-left: 0;
	}

	// hidden-[*]
	.hidden#{$infix} {
		display: none !important;
	}
}
@include grid-columns;

@each $bp, $w in $grid-breakpoints {
	@media screen and (min-width: $w) {
		@include grid-columns($bp);
	}
}
